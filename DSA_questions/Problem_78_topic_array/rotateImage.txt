https://leetcode.com/problems/rotate-image/

48. Rotate Image

You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

 

Example 1:

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]

Example 2:

Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]

 

Constraints:

    n == matrix.length == matrix[i].length
    1 <= n <= 20
    -1000 <= matrix[i][j] <= 1000


__________________

ok when solving this question keep in mind these things : 
1. rotate the n*n matrix by 90 degress CW : transpose + reverse the order of its rows
2. rotate the n*n matrix by 180 degrees CW : reverse the order of its rows and then reverse thr oder of it's cols (and vice versa)
3. rotate the n*n matrix by 270 degress CW (meaning 90 degress Anti CW) : transpose + reverse the order of its cols